//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.EntityClient;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("ScheduleViewDBModel", "FK_SqlAppointments_Categories", "Categories", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(ScheduleViewDB.Category), "SqlAppointments", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ScheduleViewDB.SqlAppointment), true)]
[assembly: EdmRelationshipAttribute("ScheduleViewDBModel", "FK_SqlExceptionAppointments_Categories", "Categories", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(ScheduleViewDB.Category), "SqlExceptionAppointments", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ScheduleViewDB.SqlExceptionAppointment), true)]
[assembly: EdmRelationshipAttribute("ScheduleViewDBModel", "FK_SqlAppointmentResources_SqlAppointment", "SqlAppointments", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ScheduleViewDB.SqlAppointment), "SqlAppointmentResources", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ScheduleViewDB.SqlAppointmentResource), true)]
[assembly: EdmRelationshipAttribute("ScheduleViewDBModel", "FK_SqlAppointmentResources_SqlResource", "SqlResources", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ScheduleViewDB.SqlResource), "SqlAppointmentResources", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ScheduleViewDB.SqlAppointmentResource), true)]
[assembly: EdmRelationshipAttribute("ScheduleViewDBModel", "FK_SqlAppointments_TimeMarkers", "TimeMarkers", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(ScheduleViewDB.TimeMarker), "SqlAppointments", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ScheduleViewDB.SqlAppointment), true)]
[assembly: EdmRelationshipAttribute("ScheduleViewDBModel", "FK_SqlExceptionOccurrences_SqlAppointments", "SqlAppointments", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ScheduleViewDB.SqlAppointment), "SqlExceptionOccurrences", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ScheduleViewDB.SqlExceptionOccurrence), true)]
[assembly: EdmRelationshipAttribute("ScheduleViewDBModel", "FK_SqlExceptionAppointments_SqlExceptionOccurrences", "SqlExceptionOccurrences", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ScheduleViewDB.SqlExceptionOccurrence), "SqlExceptionAppointments", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(ScheduleViewDB.SqlExceptionAppointment), true)]
[assembly: EdmRelationshipAttribute("ScheduleViewDBModel", "FK_SqlExceptionAppointments_TimeMarkers", "TimeMarkers", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(ScheduleViewDB.TimeMarker), "SqlExceptionAppointments", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ScheduleViewDB.SqlExceptionAppointment), true)]
[assembly: EdmRelationshipAttribute("ScheduleViewDBModel", "FK_SqlExceptionResources_SqlExceptionAppointment", "SqlExceptionAppointments", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ScheduleViewDB.SqlExceptionAppointment), "SqlExceptionResources", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ScheduleViewDB.SqlExceptionResource), true)]
[assembly: EdmRelationshipAttribute("ScheduleViewDBModel", "FK_SqlExceptionResources_SqlResource", "SqlResources", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ScheduleViewDB.SqlResource), "SqlExceptionResources", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ScheduleViewDB.SqlExceptionResource), true)]
[assembly: EdmRelationshipAttribute("ScheduleViewDBModel", "FK_SqlResources_SqlResourceTypes", "SqlResourceTypes", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(ScheduleViewDB.SqlResourceType), "SqlResources", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ScheduleViewDB.SqlResource), true)]

#endregion

namespace ScheduleViewDB
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class ScheduleViewDBEntities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new ScheduleViewDBEntities object using the connection string found in the 'ScheduleViewDBEntities' section of the application configuration file.
        /// </summary>
        public ScheduleViewDBEntities() : base("name=ScheduleViewDBEntities", "ScheduleViewDBEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new ScheduleViewDBEntities object.
        /// </summary>
        public ScheduleViewDBEntities(string connectionString) : base(connectionString, "ScheduleViewDBEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new ScheduleViewDBEntities object.
        /// </summary>
        public ScheduleViewDBEntities(EntityConnection connection) : base(connection, "ScheduleViewDBEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Category> Categories
        {
            get
            {
                if ((_Categories == null))
                {
                    _Categories = base.CreateObjectSet<Category>("Categories");
                }
                return _Categories;
            }
        }
        private ObjectSet<Category> _Categories;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<SqlAppointmentResource> SqlAppointmentResources
        {
            get
            {
                if ((_SqlAppointmentResources == null))
                {
                    _SqlAppointmentResources = base.CreateObjectSet<SqlAppointmentResource>("SqlAppointmentResources");
                }
                return _SqlAppointmentResources;
            }
        }
        private ObjectSet<SqlAppointmentResource> _SqlAppointmentResources;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<SqlAppointment> SqlAppointments
        {
            get
            {
                if ((_SqlAppointments == null))
                {
                    _SqlAppointments = base.CreateObjectSet<SqlAppointment>("SqlAppointments");
                }
                return _SqlAppointments;
            }
        }
        private ObjectSet<SqlAppointment> _SqlAppointments;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<SqlExceptionAppointment> SqlExceptionAppointments
        {
            get
            {
                if ((_SqlExceptionAppointments == null))
                {
                    _SqlExceptionAppointments = base.CreateObjectSet<SqlExceptionAppointment>("SqlExceptionAppointments");
                }
                return _SqlExceptionAppointments;
            }
        }
        private ObjectSet<SqlExceptionAppointment> _SqlExceptionAppointments;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<SqlExceptionOccurrence> SqlExceptionOccurrences
        {
            get
            {
                if ((_SqlExceptionOccurrences == null))
                {
                    _SqlExceptionOccurrences = base.CreateObjectSet<SqlExceptionOccurrence>("SqlExceptionOccurrences");
                }
                return _SqlExceptionOccurrences;
            }
        }
        private ObjectSet<SqlExceptionOccurrence> _SqlExceptionOccurrences;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<SqlExceptionResource> SqlExceptionResources
        {
            get
            {
                if ((_SqlExceptionResources == null))
                {
                    _SqlExceptionResources = base.CreateObjectSet<SqlExceptionResource>("SqlExceptionResources");
                }
                return _SqlExceptionResources;
            }
        }
        private ObjectSet<SqlExceptionResource> _SqlExceptionResources;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<SqlResource> SqlResources
        {
            get
            {
                if ((_SqlResources == null))
                {
                    _SqlResources = base.CreateObjectSet<SqlResource>("SqlResources");
                }
                return _SqlResources;
            }
        }
        private ObjectSet<SqlResource> _SqlResources;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<SqlResourceType> SqlResourceTypes
        {
            get
            {
                if ((_SqlResourceTypes == null))
                {
                    _SqlResourceTypes = base.CreateObjectSet<SqlResourceType>("SqlResourceTypes");
                }
                return _SqlResourceTypes;
            }
        }
        private ObjectSet<SqlResourceType> _SqlResourceTypes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<TimeMarker> TimeMarkers
        {
            get
            {
                if ((_TimeMarkers == null))
                {
                    _TimeMarkers = base.CreateObjectSet<TimeMarker>("TimeMarkers");
                }
                return _TimeMarkers;
            }
        }
        private ObjectSet<TimeMarker> _TimeMarkers;

        #endregion

        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Categories EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCategories(Category category)
        {
            base.AddObject("Categories", category);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the SqlAppointmentResources EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSqlAppointmentResources(SqlAppointmentResource sqlAppointmentResource)
        {
            base.AddObject("SqlAppointmentResources", sqlAppointmentResource);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the SqlAppointments EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSqlAppointments(SqlAppointment sqlAppointment)
        {
            base.AddObject("SqlAppointments", sqlAppointment);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the SqlExceptionAppointments EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSqlExceptionAppointments(SqlExceptionAppointment sqlExceptionAppointment)
        {
            base.AddObject("SqlExceptionAppointments", sqlExceptionAppointment);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the SqlExceptionOccurrences EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSqlExceptionOccurrences(SqlExceptionOccurrence sqlExceptionOccurrence)
        {
            base.AddObject("SqlExceptionOccurrences", sqlExceptionOccurrence);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the SqlExceptionResources EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSqlExceptionResources(SqlExceptionResource sqlExceptionResource)
        {
            base.AddObject("SqlExceptionResources", sqlExceptionResource);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the SqlResources EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSqlResources(SqlResource sqlResource)
        {
            base.AddObject("SqlResources", sqlResource);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the SqlResourceTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSqlResourceTypes(SqlResourceType sqlResourceType)
        {
            base.AddObject("SqlResourceTypes", sqlResourceType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the TimeMarkers EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTimeMarkers(TimeMarker timeMarker)
        {
            base.AddObject("TimeMarkers", timeMarker);
        }

        #endregion

    }

    #endregion

    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ScheduleViewDBModel", Name="Category")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Category : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Category object.
        /// </summary>
        /// <param name="categoryID">Initial value of the CategoryID property.</param>
        public static Category CreateCategory(global::System.Int32 categoryID)
        {
            Category category = new Category();
            category.CategoryID = categoryID;
            return category;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CategoryID
        {
            get
            {
                return _CategoryID;
            }
            set
            {
                if (_CategoryID != value)
                {
                    OnCategoryIDChanging(value);
                    ReportPropertyChanging("CategoryID");
                    _CategoryID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("CategoryID");
                    OnCategoryIDChanged();
                }
            }
        }
        private global::System.Int32 _CategoryID;
        partial void OnCategoryIDChanging(global::System.Int32 value);
        partial void OnCategoryIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CategoryName
        {
            get
            {
                return _CategoryName;
            }
            set
            {
                OnCategoryNameChanging(value);
                ReportPropertyChanging("CategoryName");
                _CategoryName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CategoryName");
                OnCategoryNameChanged();
            }
        }
        private global::System.String _CategoryName;
        partial void OnCategoryNameChanging(global::System.String value);
        partial void OnCategoryNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String DisplayName
        {
            get
            {
                return _DisplayName;
            }
            set
            {
                OnDisplayNameChanging(value);
                ReportPropertyChanging("DisplayName");
                _DisplayName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("DisplayName");
                OnDisplayNameChanged();
            }
        }
        private global::System.String _DisplayName;
        partial void OnDisplayNameChanging(global::System.String value);
        partial void OnDisplayNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CategoryBrushName
        {
            get
            {
                return _CategoryBrushName;
            }
            set
            {
                OnCategoryBrushNameChanging(value);
                ReportPropertyChanging("CategoryBrushName");
                _CategoryBrushName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CategoryBrushName");
                OnCategoryBrushNameChanged();
            }
        }
        private global::System.String _CategoryBrushName;
        partial void OnCategoryBrushNameChanging(global::System.String value);
        partial void OnCategoryBrushNameChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ScheduleViewDBModel", "FK_SqlAppointments_Categories", "SqlAppointments")]
        public EntityCollection<SqlAppointment> SqlAppointments
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<SqlAppointment>("ScheduleViewDBModel.FK_SqlAppointments_Categories", "SqlAppointments");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<SqlAppointment>("ScheduleViewDBModel.FK_SqlAppointments_Categories", "SqlAppointments", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ScheduleViewDBModel", "FK_SqlExceptionAppointments_Categories", "SqlExceptionAppointments")]
        public EntityCollection<SqlExceptionAppointment> SqlExceptionAppointments
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<SqlExceptionAppointment>("ScheduleViewDBModel.FK_SqlExceptionAppointments_Categories", "SqlExceptionAppointments");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<SqlExceptionAppointment>("ScheduleViewDBModel.FK_SqlExceptionAppointments_Categories", "SqlExceptionAppointments", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ScheduleViewDBModel", Name="SqlAppointment")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class SqlAppointment : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new SqlAppointment object.
        /// </summary>
        /// <param name="sqlAppointmentId">Initial value of the SqlAppointmentId property.</param>
        /// <param name="start">Initial value of the Start property.</param>
        /// <param name="end">Initial value of the End property.</param>
        /// <param name="isAllDayEvent">Initial value of the IsAllDayEvent property.</param>
        /// <param name="importance">Initial value of the Importance property.</param>
        public static SqlAppointment CreateSqlAppointment(global::System.Int32 sqlAppointmentId, global::System.DateTime start, global::System.DateTime end, global::System.Boolean isAllDayEvent, global::System.Int32 importance)
        {
            SqlAppointment sqlAppointment = new SqlAppointment();
            sqlAppointment.SqlAppointmentId = sqlAppointmentId;
            sqlAppointment.Start = start;
            sqlAppointment.End = end;
            sqlAppointment.IsAllDayEvent = isAllDayEvent;
            sqlAppointment.Importance = importance;
            return sqlAppointment;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SqlAppointmentId
        {
            get
            {
                return _SqlAppointmentId;
            }
            set
            {
                if (_SqlAppointmentId != value)
                {
                    OnSqlAppointmentIdChanging(value);
                    ReportPropertyChanging("SqlAppointmentId");
                    _SqlAppointmentId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("SqlAppointmentId");
                    OnSqlAppointmentIdChanged();
                }
            }
        }
        private global::System.Int32 _SqlAppointmentId;
        partial void OnSqlAppointmentIdChanging(global::System.Int32 value);
        partial void OnSqlAppointmentIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Subject
        {
            get
            {
                return _Subject;
            }
            set
            {
                OnSubjectChanging(value);
                ReportPropertyChanging("Subject");
                _Subject = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Subject");
                OnSubjectChanged();
            }
        }
        private global::System.String _Subject;
        partial void OnSubjectChanging(global::System.String value);
        partial void OnSubjectChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Body
        {
            get
            {
                return _Body;
            }
            set
            {
                OnBodyChanging(value);
                ReportPropertyChanging("Body");
                _Body = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Body");
                OnBodyChanged();
            }
        }
        private global::System.String _Body;
        partial void OnBodyChanging(global::System.String value);
        partial void OnBodyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Start
        {
            get
            {
                return _Start;
            }
            set
            {
                OnStartChanging(value);
                ReportPropertyChanging("Start");
                _Start = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Start");
                OnStartChanged();
            }
        }
        private global::System.DateTime _Start;
        partial void OnStartChanging(global::System.DateTime value);
        partial void OnStartChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime End
        {
            get
            {
                return _End;
            }
            set
            {
                OnEndChanging(value);
                ReportPropertyChanging("End");
                _End = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("End");
                OnEndChanged();
            }
        }
        private global::System.DateTime _End;
        partial void OnEndChanging(global::System.DateTime value);
        partial void OnEndChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsAllDayEvent
        {
            get
            {
                return _IsAllDayEvent;
            }
            set
            {
                OnIsAllDayEventChanging(value);
                ReportPropertyChanging("IsAllDayEvent");
                _IsAllDayEvent = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsAllDayEvent");
                OnIsAllDayEventChanged();
            }
        }
        private global::System.Boolean _IsAllDayEvent;
        partial void OnIsAllDayEventChanging(global::System.Boolean value);
        partial void OnIsAllDayEventChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String RecurrencePattern
        {
            get
            {
                return _RecurrencePattern;
            }
            set
            {
                OnRecurrencePatternChanging(value);
                ReportPropertyChanging("RecurrencePattern");
                _RecurrencePattern = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("RecurrencePattern");
                OnRecurrencePatternChanged();
            }
        }
        private global::System.String _RecurrencePattern;
        partial void OnRecurrencePatternChanging(global::System.String value);
        partial void OnRecurrencePatternChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String TimeZoneString
        {
            get
            {
                return _TimeZoneString;
            }
            set
            {
                OnTimeZoneStringChanging(value);
                ReportPropertyChanging("TimeZoneString");
                _TimeZoneString = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("TimeZoneString");
                OnTimeZoneStringChanged();
            }
        }
        private global::System.String _TimeZoneString;
        partial void OnTimeZoneStringChanging(global::System.String value);
        partial void OnTimeZoneStringChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Importance
        {
            get
            {
                return _Importance;
            }
            set
            {
                OnImportanceChanging(value);
                ReportPropertyChanging("Importance");
                _Importance = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Importance");
                OnImportanceChanged();
            }
        }
        private global::System.Int32 _Importance;
        partial void OnImportanceChanging(global::System.Int32 value);
        partial void OnImportanceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> TimeMarkerID
        {
            get
            {
                return _TimeMarkerID;
            }
            set
            {
                OnTimeMarkerIDChanging(value);
                ReportPropertyChanging("TimeMarkerID");
                _TimeMarkerID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TimeMarkerID");
                OnTimeMarkerIDChanged();
            }
        }
        private Nullable<global::System.Int32> _TimeMarkerID;
        partial void OnTimeMarkerIDChanging(Nullable<global::System.Int32> value);
        partial void OnTimeMarkerIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CategoryID
        {
            get
            {
                return _CategoryID;
            }
            set
            {
                OnCategoryIDChanging(value);
                ReportPropertyChanging("CategoryID");
                _CategoryID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CategoryID");
                OnCategoryIDChanged();
            }
        }
        private Nullable<global::System.Int32> _CategoryID;
        partial void OnCategoryIDChanging(Nullable<global::System.Int32> value);
        partial void OnCategoryIDChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ScheduleViewDBModel", "FK_SqlAppointments_Categories", "Categories")]
        public Category Category
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Category>("ScheduleViewDBModel.FK_SqlAppointments_Categories", "Categories").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Category>("ScheduleViewDBModel.FK_SqlAppointments_Categories", "Categories").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Category> CategoryReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Category>("ScheduleViewDBModel.FK_SqlAppointments_Categories", "Categories");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Category>("ScheduleViewDBModel.FK_SqlAppointments_Categories", "Categories", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ScheduleViewDBModel", "FK_SqlAppointmentResources_SqlAppointment", "SqlAppointmentResources")]
        public EntityCollection<SqlAppointmentResource> SqlAppointmentResources
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<SqlAppointmentResource>("ScheduleViewDBModel.FK_SqlAppointmentResources_SqlAppointment", "SqlAppointmentResources");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<SqlAppointmentResource>("ScheduleViewDBModel.FK_SqlAppointmentResources_SqlAppointment", "SqlAppointmentResources", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ScheduleViewDBModel", "FK_SqlAppointments_TimeMarkers", "TimeMarkers")]
        public TimeMarker TimeMarker
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TimeMarker>("ScheduleViewDBModel.FK_SqlAppointments_TimeMarkers", "TimeMarkers").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TimeMarker>("ScheduleViewDBModel.FK_SqlAppointments_TimeMarkers", "TimeMarkers").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<TimeMarker> TimeMarkerReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TimeMarker>("ScheduleViewDBModel.FK_SqlAppointments_TimeMarkers", "TimeMarkers");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<TimeMarker>("ScheduleViewDBModel.FK_SqlAppointments_TimeMarkers", "TimeMarkers", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ScheduleViewDBModel", "FK_SqlExceptionOccurrences_SqlAppointments", "SqlExceptionOccurrences")]
        public EntityCollection<SqlExceptionOccurrence> SqlExceptionOccurrences
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<SqlExceptionOccurrence>("ScheduleViewDBModel.FK_SqlExceptionOccurrences_SqlAppointments", "SqlExceptionOccurrences");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<SqlExceptionOccurrence>("ScheduleViewDBModel.FK_SqlExceptionOccurrences_SqlAppointments", "SqlExceptionOccurrences", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ScheduleViewDBModel", Name="SqlAppointmentResource")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class SqlAppointmentResource : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new SqlAppointmentResource object.
        /// </summary>
        /// <param name="sqlAppointments_SqlAppointmentId">Initial value of the SqlAppointments_SqlAppointmentId property.</param>
        /// <param name="sqlResources_SqlResourceId">Initial value of the SqlResources_SqlResourceId property.</param>
        public static SqlAppointmentResource CreateSqlAppointmentResource(global::System.Int32 sqlAppointments_SqlAppointmentId, global::System.Int32 sqlResources_SqlResourceId)
        {
            SqlAppointmentResource sqlAppointmentResource = new SqlAppointmentResource();
            sqlAppointmentResource.SqlAppointments_SqlAppointmentId = sqlAppointments_SqlAppointmentId;
            sqlAppointmentResource.SqlResources_SqlResourceId = sqlResources_SqlResourceId;
            return sqlAppointmentResource;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SqlAppointments_SqlAppointmentId
        {
            get
            {
                return _SqlAppointments_SqlAppointmentId;
            }
            set
            {
                if (_SqlAppointments_SqlAppointmentId != value)
                {
                    OnSqlAppointments_SqlAppointmentIdChanging(value);
                    ReportPropertyChanging("SqlAppointments_SqlAppointmentId");
                    _SqlAppointments_SqlAppointmentId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("SqlAppointments_SqlAppointmentId");
                    OnSqlAppointments_SqlAppointmentIdChanged();
                }
            }
        }
        private global::System.Int32 _SqlAppointments_SqlAppointmentId;
        partial void OnSqlAppointments_SqlAppointmentIdChanging(global::System.Int32 value);
        partial void OnSqlAppointments_SqlAppointmentIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SqlResources_SqlResourceId
        {
            get
            {
                return _SqlResources_SqlResourceId;
            }
            set
            {
                if (_SqlResources_SqlResourceId != value)
                {
                    OnSqlResources_SqlResourceIdChanging(value);
                    ReportPropertyChanging("SqlResources_SqlResourceId");
                    _SqlResources_SqlResourceId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("SqlResources_SqlResourceId");
                    OnSqlResources_SqlResourceIdChanged();
                }
            }
        }
        private global::System.Int32 _SqlResources_SqlResourceId;
        partial void OnSqlResources_SqlResourceIdChanging(global::System.Int32 value);
        partial void OnSqlResources_SqlResourceIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> ManyToManyWorkaround
        {
            get
            {
                return _ManyToManyWorkaround;
            }
            set
            {
                OnManyToManyWorkaroundChanging(value);
                ReportPropertyChanging("ManyToManyWorkaround");
                _ManyToManyWorkaround = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ManyToManyWorkaround");
                OnManyToManyWorkaroundChanged();
            }
        }
        private Nullable<global::System.Boolean> _ManyToManyWorkaround;
        partial void OnManyToManyWorkaroundChanging(Nullable<global::System.Boolean> value);
        partial void OnManyToManyWorkaroundChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ScheduleViewDBModel", "FK_SqlAppointmentResources_SqlAppointment", "SqlAppointments")]
        public SqlAppointment SqlAppointment
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SqlAppointment>("ScheduleViewDBModel.FK_SqlAppointmentResources_SqlAppointment", "SqlAppointments").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SqlAppointment>("ScheduleViewDBModel.FK_SqlAppointmentResources_SqlAppointment", "SqlAppointments").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<SqlAppointment> SqlAppointmentReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SqlAppointment>("ScheduleViewDBModel.FK_SqlAppointmentResources_SqlAppointment", "SqlAppointments");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<SqlAppointment>("ScheduleViewDBModel.FK_SqlAppointmentResources_SqlAppointment", "SqlAppointments", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ScheduleViewDBModel", "FK_SqlAppointmentResources_SqlResource", "SqlResources")]
        public SqlResource SqlResource
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SqlResource>("ScheduleViewDBModel.FK_SqlAppointmentResources_SqlResource", "SqlResources").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SqlResource>("ScheduleViewDBModel.FK_SqlAppointmentResources_SqlResource", "SqlResources").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<SqlResource> SqlResourceReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SqlResource>("ScheduleViewDBModel.FK_SqlAppointmentResources_SqlResource", "SqlResources");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<SqlResource>("ScheduleViewDBModel.FK_SqlAppointmentResources_SqlResource", "SqlResources", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ScheduleViewDBModel", Name="SqlExceptionAppointment")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class SqlExceptionAppointment : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new SqlExceptionAppointment object.
        /// </summary>
        /// <param name="exceptionId">Initial value of the ExceptionId property.</param>
        /// <param name="start">Initial value of the Start property.</param>
        /// <param name="end">Initial value of the End property.</param>
        /// <param name="isAllDayEvent">Initial value of the IsAllDayEvent property.</param>
        /// <param name="importance">Initial value of the Importance property.</param>
        public static SqlExceptionAppointment CreateSqlExceptionAppointment(global::System.Int32 exceptionId, global::System.DateTime start, global::System.DateTime end, global::System.Boolean isAllDayEvent, global::System.Int32 importance)
        {
            SqlExceptionAppointment sqlExceptionAppointment = new SqlExceptionAppointment();
            sqlExceptionAppointment.ExceptionId = exceptionId;
            sqlExceptionAppointment.Start = start;
            sqlExceptionAppointment.End = end;
            sqlExceptionAppointment.IsAllDayEvent = isAllDayEvent;
            sqlExceptionAppointment.Importance = importance;
            return sqlExceptionAppointment;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ExceptionId
        {
            get
            {
                return _ExceptionId;
            }
            set
            {
                if (_ExceptionId != value)
                {
                    OnExceptionIdChanging(value);
                    ReportPropertyChanging("ExceptionId");
                    _ExceptionId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ExceptionId");
                    OnExceptionIdChanged();
                }
            }
        }
        private global::System.Int32 _ExceptionId;
        partial void OnExceptionIdChanging(global::System.Int32 value);
        partial void OnExceptionIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Subject
        {
            get
            {
                return _Subject;
            }
            set
            {
                OnSubjectChanging(value);
                ReportPropertyChanging("Subject");
                _Subject = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Subject");
                OnSubjectChanged();
            }
        }
        private global::System.String _Subject;
        partial void OnSubjectChanging(global::System.String value);
        partial void OnSubjectChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Body
        {
            get
            {
                return _Body;
            }
            set
            {
                OnBodyChanging(value);
                ReportPropertyChanging("Body");
                _Body = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Body");
                OnBodyChanged();
            }
        }
        private global::System.String _Body;
        partial void OnBodyChanging(global::System.String value);
        partial void OnBodyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Start
        {
            get
            {
                return _Start;
            }
            set
            {
                OnStartChanging(value);
                ReportPropertyChanging("Start");
                _Start = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Start");
                OnStartChanged();
            }
        }
        private global::System.DateTime _Start;
        partial void OnStartChanging(global::System.DateTime value);
        partial void OnStartChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime End
        {
            get
            {
                return _End;
            }
            set
            {
                OnEndChanging(value);
                ReportPropertyChanging("End");
                _End = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("End");
                OnEndChanged();
            }
        }
        private global::System.DateTime _End;
        partial void OnEndChanging(global::System.DateTime value);
        partial void OnEndChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsAllDayEvent
        {
            get
            {
                return _IsAllDayEvent;
            }
            set
            {
                OnIsAllDayEventChanging(value);
                ReportPropertyChanging("IsAllDayEvent");
                _IsAllDayEvent = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsAllDayEvent");
                OnIsAllDayEventChanged();
            }
        }
        private global::System.Boolean _IsAllDayEvent;
        partial void OnIsAllDayEventChanging(global::System.Boolean value);
        partial void OnIsAllDayEventChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String TimeZoneString
        {
            get
            {
                return _TimeZoneString;
            }
            set
            {
                OnTimeZoneStringChanging(value);
                ReportPropertyChanging("TimeZoneString");
                _TimeZoneString = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("TimeZoneString");
                OnTimeZoneStringChanged();
            }
        }
        private global::System.String _TimeZoneString;
        partial void OnTimeZoneStringChanging(global::System.String value);
        partial void OnTimeZoneStringChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Importance
        {
            get
            {
                return _Importance;
            }
            set
            {
                OnImportanceChanging(value);
                ReportPropertyChanging("Importance");
                _Importance = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Importance");
                OnImportanceChanged();
            }
        }
        private global::System.Int32 _Importance;
        partial void OnImportanceChanging(global::System.Int32 value);
        partial void OnImportanceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> TimeMarkerID
        {
            get
            {
                return _TimeMarkerID;
            }
            set
            {
                OnTimeMarkerIDChanging(value);
                ReportPropertyChanging("TimeMarkerID");
                _TimeMarkerID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TimeMarkerID");
                OnTimeMarkerIDChanged();
            }
        }
        private Nullable<global::System.Int32> _TimeMarkerID;
        partial void OnTimeMarkerIDChanging(Nullable<global::System.Int32> value);
        partial void OnTimeMarkerIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CategoryID
        {
            get
            {
                return _CategoryID;
            }
            set
            {
                OnCategoryIDChanging(value);
                ReportPropertyChanging("CategoryID");
                _CategoryID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CategoryID");
                OnCategoryIDChanged();
            }
        }
        private Nullable<global::System.Int32> _CategoryID;
        partial void OnCategoryIDChanging(Nullable<global::System.Int32> value);
        partial void OnCategoryIDChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ScheduleViewDBModel", "FK_SqlExceptionAppointments_Categories", "Categories")]
        public Category Category
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Category>("ScheduleViewDBModel.FK_SqlExceptionAppointments_Categories", "Categories").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Category>("ScheduleViewDBModel.FK_SqlExceptionAppointments_Categories", "Categories").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Category> CategoryReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Category>("ScheduleViewDBModel.FK_SqlExceptionAppointments_Categories", "Categories");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Category>("ScheduleViewDBModel.FK_SqlExceptionAppointments_Categories", "Categories", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ScheduleViewDBModel", "FK_SqlExceptionAppointments_SqlExceptionOccurrences", "SqlExceptionOccurrences")]
        public SqlExceptionOccurrence SqlExceptionOccurrence
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SqlExceptionOccurrence>("ScheduleViewDBModel.FK_SqlExceptionAppointments_SqlExceptionOccurrences", "SqlExceptionOccurrences").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SqlExceptionOccurrence>("ScheduleViewDBModel.FK_SqlExceptionAppointments_SqlExceptionOccurrences", "SqlExceptionOccurrences").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<SqlExceptionOccurrence> SqlExceptionOccurrenceReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SqlExceptionOccurrence>("ScheduleViewDBModel.FK_SqlExceptionAppointments_SqlExceptionOccurrences", "SqlExceptionOccurrences");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<SqlExceptionOccurrence>("ScheduleViewDBModel.FK_SqlExceptionAppointments_SqlExceptionOccurrences", "SqlExceptionOccurrences", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ScheduleViewDBModel", "FK_SqlExceptionAppointments_TimeMarkers", "TimeMarkers")]
        public TimeMarker TimeMarker
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TimeMarker>("ScheduleViewDBModel.FK_SqlExceptionAppointments_TimeMarkers", "TimeMarkers").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TimeMarker>("ScheduleViewDBModel.FK_SqlExceptionAppointments_TimeMarkers", "TimeMarkers").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<TimeMarker> TimeMarkerReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TimeMarker>("ScheduleViewDBModel.FK_SqlExceptionAppointments_TimeMarkers", "TimeMarkers");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<TimeMarker>("ScheduleViewDBModel.FK_SqlExceptionAppointments_TimeMarkers", "TimeMarkers", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ScheduleViewDBModel", "FK_SqlExceptionResources_SqlExceptionAppointment", "SqlExceptionResources")]
        public EntityCollection<SqlExceptionResource> SqlExceptionResources
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<SqlExceptionResource>("ScheduleViewDBModel.FK_SqlExceptionResources_SqlExceptionAppointment", "SqlExceptionResources");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<SqlExceptionResource>("ScheduleViewDBModel.FK_SqlExceptionResources_SqlExceptionAppointment", "SqlExceptionResources", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ScheduleViewDBModel", Name="SqlExceptionOccurrence")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class SqlExceptionOccurrence : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new SqlExceptionOccurrence object.
        /// </summary>
        /// <param name="exceptionId">Initial value of the ExceptionId property.</param>
        /// <param name="masterSqlAppointmentId">Initial value of the MasterSqlAppointmentId property.</param>
        /// <param name="exceptionDate">Initial value of the ExceptionDate property.</param>
        public static SqlExceptionOccurrence CreateSqlExceptionOccurrence(global::System.Int32 exceptionId, global::System.Int32 masterSqlAppointmentId, global::System.DateTime exceptionDate)
        {
            SqlExceptionOccurrence sqlExceptionOccurrence = new SqlExceptionOccurrence();
            sqlExceptionOccurrence.ExceptionId = exceptionId;
            sqlExceptionOccurrence.MasterSqlAppointmentId = masterSqlAppointmentId;
            sqlExceptionOccurrence.ExceptionDate = exceptionDate;
            return sqlExceptionOccurrence;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ExceptionId
        {
            get
            {
                return _ExceptionId;
            }
            set
            {
                if (_ExceptionId != value)
                {
                    OnExceptionIdChanging(value);
                    ReportPropertyChanging("ExceptionId");
                    _ExceptionId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ExceptionId");
                    OnExceptionIdChanged();
                }
            }
        }
        private global::System.Int32 _ExceptionId;
        partial void OnExceptionIdChanging(global::System.Int32 value);
        partial void OnExceptionIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 MasterSqlAppointmentId
        {
            get
            {
                return _MasterSqlAppointmentId;
            }
            set
            {
                OnMasterSqlAppointmentIdChanging(value);
                ReportPropertyChanging("MasterSqlAppointmentId");
                _MasterSqlAppointmentId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MasterSqlAppointmentId");
                OnMasterSqlAppointmentIdChanged();
            }
        }
        private global::System.Int32 _MasterSqlAppointmentId;
        partial void OnMasterSqlAppointmentIdChanging(global::System.Int32 value);
        partial void OnMasterSqlAppointmentIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime ExceptionDate
        {
            get
            {
                return _ExceptionDate;
            }
            set
            {
                OnExceptionDateChanging(value);
                ReportPropertyChanging("ExceptionDate");
                _ExceptionDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ExceptionDate");
                OnExceptionDateChanged();
            }
        }
        private global::System.DateTime _ExceptionDate;
        partial void OnExceptionDateChanging(global::System.DateTime value);
        partial void OnExceptionDateChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ScheduleViewDBModel", "FK_SqlExceptionOccurrences_SqlAppointments", "SqlAppointments")]
        public SqlAppointment SqlAppointment
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SqlAppointment>("ScheduleViewDBModel.FK_SqlExceptionOccurrences_SqlAppointments", "SqlAppointments").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SqlAppointment>("ScheduleViewDBModel.FK_SqlExceptionOccurrences_SqlAppointments", "SqlAppointments").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<SqlAppointment> SqlAppointmentReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SqlAppointment>("ScheduleViewDBModel.FK_SqlExceptionOccurrences_SqlAppointments", "SqlAppointments");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<SqlAppointment>("ScheduleViewDBModel.FK_SqlExceptionOccurrences_SqlAppointments", "SqlAppointments", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ScheduleViewDBModel", "FK_SqlExceptionAppointments_SqlExceptionOccurrences", "SqlExceptionAppointments")]
        public SqlExceptionAppointment SqlExceptionAppointment
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SqlExceptionAppointment>("ScheduleViewDBModel.FK_SqlExceptionAppointments_SqlExceptionOccurrences", "SqlExceptionAppointments").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SqlExceptionAppointment>("ScheduleViewDBModel.FK_SqlExceptionAppointments_SqlExceptionOccurrences", "SqlExceptionAppointments").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<SqlExceptionAppointment> SqlExceptionAppointmentReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SqlExceptionAppointment>("ScheduleViewDBModel.FK_SqlExceptionAppointments_SqlExceptionOccurrences", "SqlExceptionAppointments");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<SqlExceptionAppointment>("ScheduleViewDBModel.FK_SqlExceptionAppointments_SqlExceptionOccurrences", "SqlExceptionAppointments", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ScheduleViewDBModel", Name="SqlExceptionResource")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class SqlExceptionResource : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new SqlExceptionResource object.
        /// </summary>
        /// <param name="sqlExceptionAppointments_ExceptionId">Initial value of the SqlExceptionAppointments_ExceptionId property.</param>
        /// <param name="sqlResources_SqlResourceId">Initial value of the SqlResources_SqlResourceId property.</param>
        public static SqlExceptionResource CreateSqlExceptionResource(global::System.Int32 sqlExceptionAppointments_ExceptionId, global::System.Int32 sqlResources_SqlResourceId)
        {
            SqlExceptionResource sqlExceptionResource = new SqlExceptionResource();
            sqlExceptionResource.SqlExceptionAppointments_ExceptionId = sqlExceptionAppointments_ExceptionId;
            sqlExceptionResource.SqlResources_SqlResourceId = sqlResources_SqlResourceId;
            return sqlExceptionResource;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SqlExceptionAppointments_ExceptionId
        {
            get
            {
                return _SqlExceptionAppointments_ExceptionId;
            }
            set
            {
                if (_SqlExceptionAppointments_ExceptionId != value)
                {
                    OnSqlExceptionAppointments_ExceptionIdChanging(value);
                    ReportPropertyChanging("SqlExceptionAppointments_ExceptionId");
                    _SqlExceptionAppointments_ExceptionId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("SqlExceptionAppointments_ExceptionId");
                    OnSqlExceptionAppointments_ExceptionIdChanged();
                }
            }
        }
        private global::System.Int32 _SqlExceptionAppointments_ExceptionId;
        partial void OnSqlExceptionAppointments_ExceptionIdChanging(global::System.Int32 value);
        partial void OnSqlExceptionAppointments_ExceptionIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SqlResources_SqlResourceId
        {
            get
            {
                return _SqlResources_SqlResourceId;
            }
            set
            {
                if (_SqlResources_SqlResourceId != value)
                {
                    OnSqlResources_SqlResourceIdChanging(value);
                    ReportPropertyChanging("SqlResources_SqlResourceId");
                    _SqlResources_SqlResourceId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("SqlResources_SqlResourceId");
                    OnSqlResources_SqlResourceIdChanged();
                }
            }
        }
        private global::System.Int32 _SqlResources_SqlResourceId;
        partial void OnSqlResources_SqlResourceIdChanging(global::System.Int32 value);
        partial void OnSqlResources_SqlResourceIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> ManyToManyWorkaround
        {
            get
            {
                return _ManyToManyWorkaround;
            }
            set
            {
                OnManyToManyWorkaroundChanging(value);
                ReportPropertyChanging("ManyToManyWorkaround");
                _ManyToManyWorkaround = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ManyToManyWorkaround");
                OnManyToManyWorkaroundChanged();
            }
        }
        private Nullable<global::System.Boolean> _ManyToManyWorkaround;
        partial void OnManyToManyWorkaroundChanging(Nullable<global::System.Boolean> value);
        partial void OnManyToManyWorkaroundChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ScheduleViewDBModel", "FK_SqlExceptionResources_SqlExceptionAppointment", "SqlExceptionAppointments")]
        public SqlExceptionAppointment SqlExceptionAppointment
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SqlExceptionAppointment>("ScheduleViewDBModel.FK_SqlExceptionResources_SqlExceptionAppointment", "SqlExceptionAppointments").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SqlExceptionAppointment>("ScheduleViewDBModel.FK_SqlExceptionResources_SqlExceptionAppointment", "SqlExceptionAppointments").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<SqlExceptionAppointment> SqlExceptionAppointmentReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SqlExceptionAppointment>("ScheduleViewDBModel.FK_SqlExceptionResources_SqlExceptionAppointment", "SqlExceptionAppointments");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<SqlExceptionAppointment>("ScheduleViewDBModel.FK_SqlExceptionResources_SqlExceptionAppointment", "SqlExceptionAppointments", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ScheduleViewDBModel", "FK_SqlExceptionResources_SqlResource", "SqlResources")]
        public SqlResource SqlResource
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SqlResource>("ScheduleViewDBModel.FK_SqlExceptionResources_SqlResource", "SqlResources").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SqlResource>("ScheduleViewDBModel.FK_SqlExceptionResources_SqlResource", "SqlResources").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<SqlResource> SqlResourceReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SqlResource>("ScheduleViewDBModel.FK_SqlExceptionResources_SqlResource", "SqlResources");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<SqlResource>("ScheduleViewDBModel.FK_SqlExceptionResources_SqlResource", "SqlResources", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ScheduleViewDBModel", Name="SqlResource")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class SqlResource : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new SqlResource object.
        /// </summary>
        /// <param name="sqlResourceId">Initial value of the SqlResourceId property.</param>
        public static SqlResource CreateSqlResource(global::System.Int32 sqlResourceId)
        {
            SqlResource sqlResource = new SqlResource();
            sqlResource.SqlResourceId = sqlResourceId;
            return sqlResource;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SqlResourceId
        {
            get
            {
                return _SqlResourceId;
            }
            set
            {
                if (_SqlResourceId != value)
                {
                    OnSqlResourceIdChanging(value);
                    ReportPropertyChanging("SqlResourceId");
                    _SqlResourceId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("SqlResourceId");
                    OnSqlResourceIdChanged();
                }
            }
        }
        private global::System.Int32 _SqlResourceId;
        partial void OnSqlResourceIdChanging(global::System.Int32 value);
        partial void OnSqlResourceIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> SqlResourceTypeId
        {
            get
            {
                return _SqlResourceTypeId;
            }
            set
            {
                OnSqlResourceTypeIdChanging(value);
                ReportPropertyChanging("SqlResourceTypeId");
                _SqlResourceTypeId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SqlResourceTypeId");
                OnSqlResourceTypeIdChanged();
            }
        }
        private Nullable<global::System.Int32> _SqlResourceTypeId;
        partial void OnSqlResourceTypeIdChanging(Nullable<global::System.Int32> value);
        partial void OnSqlResourceTypeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ResourceName
        {
            get
            {
                return _ResourceName;
            }
            set
            {
                OnResourceNameChanging(value);
                ReportPropertyChanging("ResourceName");
                _ResourceName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ResourceName");
                OnResourceNameChanged();
            }
        }
        private global::System.String _ResourceName;
        partial void OnResourceNameChanging(global::System.String value);
        partial void OnResourceNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String DisplayName
        {
            get
            {
                return _DisplayName;
            }
            set
            {
                OnDisplayNameChanging(value);
                ReportPropertyChanging("DisplayName");
                _DisplayName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("DisplayName");
                OnDisplayNameChanged();
            }
        }
        private global::System.String _DisplayName;
        partial void OnDisplayNameChanging(global::System.String value);
        partial void OnDisplayNameChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ScheduleViewDBModel", "FK_SqlAppointmentResources_SqlResource", "SqlAppointmentResources")]
        public EntityCollection<SqlAppointmentResource> SqlAppointmentResources
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<SqlAppointmentResource>("ScheduleViewDBModel.FK_SqlAppointmentResources_SqlResource", "SqlAppointmentResources");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<SqlAppointmentResource>("ScheduleViewDBModel.FK_SqlAppointmentResources_SqlResource", "SqlAppointmentResources", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ScheduleViewDBModel", "FK_SqlExceptionResources_SqlResource", "SqlExceptionResources")]
        public EntityCollection<SqlExceptionResource> SqlExceptionResources
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<SqlExceptionResource>("ScheduleViewDBModel.FK_SqlExceptionResources_SqlResource", "SqlExceptionResources");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<SqlExceptionResource>("ScheduleViewDBModel.FK_SqlExceptionResources_SqlResource", "SqlExceptionResources", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ScheduleViewDBModel", "FK_SqlResources_SqlResourceTypes", "SqlResourceTypes")]
        public SqlResourceType SqlResourceType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SqlResourceType>("ScheduleViewDBModel.FK_SqlResources_SqlResourceTypes", "SqlResourceTypes").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SqlResourceType>("ScheduleViewDBModel.FK_SqlResources_SqlResourceTypes", "SqlResourceTypes").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<SqlResourceType> SqlResourceTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SqlResourceType>("ScheduleViewDBModel.FK_SqlResources_SqlResourceTypes", "SqlResourceTypes");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<SqlResourceType>("ScheduleViewDBModel.FK_SqlResources_SqlResourceTypes", "SqlResourceTypes", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ScheduleViewDBModel", Name="SqlResourceType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class SqlResourceType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new SqlResourceType object.
        /// </summary>
        /// <param name="sqlResourceTypeId">Initial value of the SqlResourceTypeId property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="allowMultipleSelection">Initial value of the AllowMultipleSelection property.</param>
        public static SqlResourceType CreateSqlResourceType(global::System.Int32 sqlResourceTypeId, global::System.String name, global::System.Boolean allowMultipleSelection)
        {
            SqlResourceType sqlResourceType = new SqlResourceType();
            sqlResourceType.SqlResourceTypeId = sqlResourceTypeId;
            sqlResourceType.Name = name;
            sqlResourceType.AllowMultipleSelection = allowMultipleSelection;
            return sqlResourceType;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SqlResourceTypeId
        {
            get
            {
                return _SqlResourceTypeId;
            }
            set
            {
                if (_SqlResourceTypeId != value)
                {
                    OnSqlResourceTypeIdChanging(value);
                    ReportPropertyChanging("SqlResourceTypeId");
                    _SqlResourceTypeId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("SqlResourceTypeId");
                    OnSqlResourceTypeIdChanged();
                }
            }
        }
        private global::System.Int32 _SqlResourceTypeId;
        partial void OnSqlResourceTypeIdChanging(global::System.Int32 value);
        partial void OnSqlResourceTypeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String DisplayName
        {
            get
            {
                return _DisplayName;
            }
            set
            {
                OnDisplayNameChanging(value);
                ReportPropertyChanging("DisplayName");
                _DisplayName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("DisplayName");
                OnDisplayNameChanged();
            }
        }
        private global::System.String _DisplayName;
        partial void OnDisplayNameChanging(global::System.String value);
        partial void OnDisplayNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean AllowMultipleSelection
        {
            get
            {
                return _AllowMultipleSelection;
            }
            set
            {
                OnAllowMultipleSelectionChanging(value);
                ReportPropertyChanging("AllowMultipleSelection");
                _AllowMultipleSelection = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AllowMultipleSelection");
                OnAllowMultipleSelectionChanged();
            }
        }
        private global::System.Boolean _AllowMultipleSelection;
        partial void OnAllowMultipleSelectionChanging(global::System.Boolean value);
        partial void OnAllowMultipleSelectionChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ScheduleViewDBModel", "FK_SqlResources_SqlResourceTypes", "SqlResources")]
        public EntityCollection<SqlResource> SqlResources
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<SqlResource>("ScheduleViewDBModel.FK_SqlResources_SqlResourceTypes", "SqlResources");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<SqlResource>("ScheduleViewDBModel.FK_SqlResources_SqlResourceTypes", "SqlResources", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ScheduleViewDBModel", Name="TimeMarker")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class TimeMarker : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new TimeMarker object.
        /// </summary>
        /// <param name="timeMarkersId">Initial value of the TimeMarkersId property.</param>
        public static TimeMarker CreateTimeMarker(global::System.Int32 timeMarkersId)
        {
            TimeMarker timeMarker = new TimeMarker();
            timeMarker.TimeMarkersId = timeMarkersId;
            return timeMarker;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TimeMarkersId
        {
            get
            {
                return _TimeMarkersId;
            }
            set
            {
                if (_TimeMarkersId != value)
                {
                    OnTimeMarkersIdChanging(value);
                    ReportPropertyChanging("TimeMarkersId");
                    _TimeMarkersId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("TimeMarkersId");
                    OnTimeMarkersIdChanged();
                }
            }
        }
        private global::System.Int32 _TimeMarkersId;
        partial void OnTimeMarkersIdChanging(global::System.Int32 value);
        partial void OnTimeMarkersIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String TimeMarkerName
        {
            get
            {
                return _TimeMarkerName;
            }
            set
            {
                OnTimeMarkerNameChanging(value);
                ReportPropertyChanging("TimeMarkerName");
                _TimeMarkerName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("TimeMarkerName");
                OnTimeMarkerNameChanged();
            }
        }
        private global::System.String _TimeMarkerName;
        partial void OnTimeMarkerNameChanging(global::System.String value);
        partial void OnTimeMarkerNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String TimeMarkerBrushName
        {
            get
            {
                return _TimeMarkerBrushName;
            }
            set
            {
                OnTimeMarkerBrushNameChanging(value);
                ReportPropertyChanging("TimeMarkerBrushName");
                _TimeMarkerBrushName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("TimeMarkerBrushName");
                OnTimeMarkerBrushNameChanged();
            }
        }
        private global::System.String _TimeMarkerBrushName;
        partial void OnTimeMarkerBrushNameChanging(global::System.String value);
        partial void OnTimeMarkerBrushNameChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ScheduleViewDBModel", "FK_SqlAppointments_TimeMarkers", "SqlAppointments")]
        public EntityCollection<SqlAppointment> SqlAppointments
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<SqlAppointment>("ScheduleViewDBModel.FK_SqlAppointments_TimeMarkers", "SqlAppointments");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<SqlAppointment>("ScheduleViewDBModel.FK_SqlAppointments_TimeMarkers", "SqlAppointments", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ScheduleViewDBModel", "FK_SqlExceptionAppointments_TimeMarkers", "SqlExceptionAppointments")]
        public EntityCollection<SqlExceptionAppointment> SqlExceptionAppointments
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<SqlExceptionAppointment>("ScheduleViewDBModel.FK_SqlExceptionAppointments_TimeMarkers", "SqlExceptionAppointments");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<SqlExceptionAppointment>("ScheduleViewDBModel.FK_SqlExceptionAppointments_TimeMarkers", "SqlExceptionAppointments", value);
                }
            }
        }

        #endregion

    }

    #endregion

    
}
